def POD_LABEL = "testpod-${UUID.randomUUID().toString()}"
podTemplate(label: POD_LABEL, cloud: 'kubernetes', containers: [
    containerTemplate(name: 'docker', image: 'jfeng45/modified-jenkins:1.0', ttyEnabled: true, command: 'cat'),
    containerTemplate(name: 'build', image: 'lachlanevenson/k8s-kubectl:latest', ttyEnabled: true, command: 'cat')
  ],
  volumes: [
  hostPathVolume(mountPath: '/home/vagrant/jfeng45/k8sdemo', hostPath: '/home/vagrant/jfeng45/k8sdemo'),
  hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock')
  ]) {

    node(POD_LABEL) {
       stage('Source a go project') {
            container('build') {
                        sh 'echo hello'
                        git 'https://github.com/jfeng45/k8sdemo'
                    }
            }
        stage('Create Docker images') {
          container('docker') {
              app = docker.build("jfeng45/codedemo", "-f ${WORKSPACE}/script/kubernetes/backend/docker/Dockerfile-k8sdemo-test .")
              docker.withRegistry('', 'dockerhub') {
                  // Push image and tag it with our build number for versioning purposes.
                  app.push("${env.BUILD_NUMBER}")
              }

            }
          }
        stage('build a go project') {
            container('build') {
                    sh 'kubectl apply -f ${WORKSPACE}/script/kubernetes/backend/backend-deployment.yaml'
                    sh 'kubectl apply -f ${WORKSPACE}/script/kubernetes/backend/backend-service.yaml'
                }
        }
   }
}